
* * * * * Things that need doing * * * * * 


  -- Minimum viable product --
* Safer writing to database file, (maybe copy and delete old file)
* Popup on unrecoverable errors
* Add own licence and licences of used open source code (and maybe fonts)
* Get memory allocation sizes right


* Replace vector with custom thing
* replace hash table with custom thing (no deleting so don't need tombstones)
* ensure memory arenas actually work past 1 block

  -- Finished product --
* Better loading of textures for the first time (its currently slow with approx >50 textures)
* Low framerate UI (not that needed, and adds lots of complexity)
* Event driven (not polling) for window switches and tab switch
* Website icons (maybe using duckduck go or google service)
* Better keyword support, allowing different records for subdomains and different paths in a domain
* Idle detection
* Delay unloading all UI resources for 10 seconds when UI closed maybe?
* Day start/end time for allowed recording
* Autostart at system startup
* Make imgui_impl files better, remove unneeded stuff
* Array textures




// Separate thread Idea
Main thread is hidden message only window
UI thread is opened closed whenever
UI can push stuff onto shared memory queue thing to give main (background) thread settings and commands to quit
UI can push close command to ui when it gets notified from tray icon
UI gets all its state from reading from file
Threads share file access

Problems
multithreading challenges will likely occur
Communication between threads
SDL forces you to only have main thread have a window and recieve events

Benefits
More separatation of concerns, main background doesn't need to know how UI operates
Simpler to have different 'framerates' 
day view is clearer, as its just what's in the file is the view



// -----------------------------------------------------------------
// TODO:
// * Remember window width and height
// * Unicode correctness
// * Path length correctness
//  When finished leave asserts and make them write to a log file instead of calling debugbreak()
// -----------------------------------------------------------------


